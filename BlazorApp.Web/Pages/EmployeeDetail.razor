@using BlazorApp.Web.Data
@using BlazorApp.Web.Models
@inject IRepository<Employee> repo
@inject IJSRuntime jsRuntime

<div class="modal" tabindex="-1" role="dialog" id="employeeModal">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@CustomHeader</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <EditForm Model="@EmployeeObject" OnValidSubmit="@HandleValidSubmit">
                    <DataAnnotationsValidator />
                    <div class="form-group">
                        <label for="firstName">Имя</label>
                        <input type="hidden" @bind-value="@EmployeeObject.Id" />
                        <InputText id="firstName" class="form-control" 
                            @bind-Value="@EmployeeObject.FirstName" />
                        <ValidationMessage For="@(() => EmployeeObject.FirstName)" />

                        <label for="lastName">Фамилия</label>
                        <input for="LastName" id="lastName" class="form-control" 
                            @bind-value="@EmployeeObject.LastName" />
                        <ValidationMessage For="@(() => EmployeeObject.LastName)" />

                        <label for="patronymicName">Отчество</label>
                        <input for="PatronymicName" id="patronymicName" class="form-control" 
                            @bind-value="@EmployeeObject.PatronymicName" />

                        <label for="phoneNumber">Телефон</label>
                        <input for="PhoneNumber" id="phoneNumber" class="form-control" 
                            @bind-value="@EmployeeObject.PhoneNumber" />
                    </div>
                    <div class="form-group">
                        <label for="company">Company</label>
                        <InputSelect type="" min="1" id="company" class="form-control" @bind-Value="@EmployeeObject.CompanyId">
                            <option value="0">Выбрать</option>
                            @if (CompanyList != null)
                            {
                                @foreach (var company in CompanyList)
                                {
                                    <option value="@company.Id">@company.CompanyName</option>
                                } 
                            }
                        </InputSelect>
                        <ValidationMessage For="@(() => EmployeeObject.CompanyId)" />
                    </div>
                    <button type="submit" class="btn btn-primary">Submit</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public Employee EmployeeObject { get; set; }
    [Parameter]
    public Action DataChanged { get; set; }
    [Parameter]
    public List<Company> CompanyList { get; set; } = new List<Company>();
    [Parameter]
    public RenderFragment CustomHeader { get; set; }

    private async Task CloseEmployeeModal()
    {
        await jsRuntime.InvokeAsync<object>("CloseModal", "employeeModal");
    }
    private async void HandleValidSubmit()
    {
        if (EmployeeObject.Id == 0)
        {
            await repo.AddAsync(EmployeeObject);
        }
        else
        {
            await repo.UpdateAsync(EmployeeObject);
        }
        await CloseEmployeeModal();
        DataChanged?.Invoke();
    }
}